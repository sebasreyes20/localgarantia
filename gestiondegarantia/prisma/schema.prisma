// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  role          String     @default("seller") // admin, seller
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  warranties    Warranty[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Warranty {
  id                String    @id @default(uuid())
  customerName      String
  customerPhone     String
  ownerName        String?
  ownerPhone       String?
  address          String
  brand            String
  model            String
  serial           String
  purchaseDate     DateTime
  invoiceNumber    String
  damagedPart      String
  damagedPartSerial String?
  damageDate       DateTime
  damageDescription String
  customerSignature String
  warrantyStatus   String    @default("pending") // pending, approved, rejected, completed
  crediMemo        String?
  replacementPart  String?
  replacementSerial String?
  sellerSignature  String?
  managementDate   DateTime?
  technicianNotes  String?
  resolutionDate   DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  assignedTo       User?     @relation(fields: [assignedToId], references: [id])
  assignedToId     String?
  assignedAt       DateTime?
  lastReminderSent DateTime?

  @@map("warranties")
}
